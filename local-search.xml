<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>RPC基本概念</title>
    <link href="/2023/03/05/RPC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <url>/2023/03/05/RPC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h1><h2 id="1-1-本地函数调用"><a href="#1-1-本地函数调用" class="headerlink" title="1.1 本地函数调用"></a>1.1 本地函数调用</h2><p>举例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-function">func <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    var a = <span class="hljs-number">2</span><br>    var b = <span class="hljs-number">3</span><br>    result := <span class="hljs-built_in">calculate</span>(a, b)<br>    fmt.<span class="hljs-built_in">Println</span>(result)<br>    <span class="hljs-keyword">return</span><br>&#125;<br><br><br>func <span class="hljs-built_in">calculate</span>(x, y <span class="hljs-type">int</span>) &#123;<br>    z := x * y<br>    <span class="hljs-keyword">return</span> z<br>&#125;<br></code></pre></td></tr></table></figure><ol><li>将 a 和 b 的值压栈</li><li>通过函数指针找到 calculate 函数，进入函数取出栈中的值 2 和 3，将其赋予 x 和 y</li><li>计算 x * y，并将结果存在 z</li><li>将 z 的值压栈，然后从 calculate 返回</li><li>从栈中取出 z 返回值，并赋值给 result</li></ol><h2 id="1-2-远程服务调用（RPC-Remote-Procedure-Calls）"><a href="#1-2-远程服务调用（RPC-Remote-Procedure-Calls）" class="headerlink" title="1.2 远程服务调用（RPC - Remote Procedure Calls）"></a>1.2 远程服务调用（RPC - Remote Procedure Calls）</h2><p>远程服务调用和本地服务调用相比，服务端和客户端之间肯定部署在不同的机器上&#x2F;中间隔着一个网络</p><p>RPC需要解决的问题：</p><ol><li>函数映射</li></ol><p>举例：网上商城</p><p><strong>问题一：网上商城如何告诉支付服务要实现付款&#x2F;充值？</strong></p><p>本地调用是使用函数指针调用，但是远程调用是两个进程，其地址空间都是不一样的。所以每个函数都有自己的ID，在RPC的时候需要附上函数ID。通过ID找到函数，然后再去执行</p><ol start="2"><li>数据转换成字节流</li></ol><p><strong>问题二：网上商城如何将参数告诉远程？</strong></p><p>本地调用直接参数压栈即可，远程调用中客户端和服务器是不同的进程，不能通过简单的内存传输，这个时候需要客户端先转换为一个字节流传输到服务端，再将字节流转换成自己能读取的格式</p><ol start="3"><li>网络传输</li></ol><center><img src="网络传输.png"></center><p><strong>问题三：远程调用往往发生在网络上，如何保证网络上高效稳定地传输数据？</strong></p><h2 id="1-3-RPC-概念模型"><a href="#1-3-RPC-概念模型" class="headerlink" title="1.3 RPC 概念模型"></a>1.3 RPC 概念模型</h2><center><img src="RPC概念模型.png"></center><h2 id="1-4-一次-RPC-的完整过程"><a href="#1-4-一次-RPC-的完整过程" class="headerlink" title="1.4 一次 RPC 的完整过程"></a>1.4 一次 RPC 的完整过程</h2><center><img src="一次RPC的完整过程.png"></center><p><strong>IDL（interface description language）文件</strong></p><p>IDL 通过一种中立的方式来描述接口，使得在不同平台上运行的对象和用不通过语音编写的程序可以相互通信</p><p><strong>生成代码</strong></p><p>通过编译器工具把 IDL 文件转换成语言对应的静态库</p><p><strong>编解码</strong></p><p>从内存中表示到字节序列的转换成为编码，反之为解码，也常叫做序列化和反序列化</p><p><strong>通信协议</strong></p><p>规范了数据再网络中的传输内容和格式。除必须的请求&#x2F;响应数据外，通常还会包含额外的元数据</p><p><strong>网络传输</strong></p><p>通常基于成熟的网络库走 TCP&#x2F;UDP 传输</p><h2 id="1-5-RPC-的好处"><a href="#1-5-RPC-的好处" class="headerlink" title="1.5 RPC 的好处"></a>1.5 RPC 的好处</h2><ol><li><p>单一职责，有利于分工协作和运维开发</p></li><li><p>可扩展性强，资源利用率更优</p></li><li><p>故障隔离，服务的整体可靠性更高</p></li></ol><center><img src="抖音架构图.png"></center><h2 id="1-6-RPC-带来的问题"><a href="#1-6-RPC-带来的问题" class="headerlink" title="1.6 RPC 带来的问题"></a>1.6 RPC 带来的问题</h2><ol><li><p>服务宕机，对方如何处理？</p></li><li><p>在调用过程中发生网络异常，如何保证消息的可达性？</p></li><li><p>请求量突增导致无法及时处理，有哪些应对措施？</p></li></ol><p><strong>上述问题需要使用 RPC 框架处理</strong></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li><p>本地函数调用和 RPC 调用的区别：函数映射、数据转换成字节流、网络传输</p></li><li><p>RPC 概念模型：User、User-Stub、RPC-Runtime、Server-Stub、Server</p></li><li><p>一次 RPC 的完整过程，并讲解了 RPC 的基本概念定义</p></li><li><p>RPC 带来好处的同时也带来了不少新的问题，将由 RPC 框架来解决</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>RPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/03/hello-world/"/>
    <url>/2023/03/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
